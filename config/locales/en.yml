# English strings go here for Rails i18n
en:
  # == password complexity == #
  rap_setting_password_complexity:    'Password Complexity'
  rap_setting_password_complexity_a:  'Passwords must contain at least'
  rap_setting_password_complexity_b:  'of the following character classes'
  rap_setting_password_upper_case:    '* Upper case (A-Z)'
  rap_setting_password_lower_case:    '* Lower case (a-z)'
  rap_setting_password_numerical:     '* Numerical (0-9)'
  rap_setting_password_non_alphanum:  '* Non-alphanumeric (!$#,)'

  rap_error_password_complexity:      'Passwords must contain characters from %{complexity} of the following character classes: upper case (A-Z), lower case (a-z), numbers (0-9) and non-alphanumric (!$#,).'


    # == password expiry == #
  rap_setting_password_expiry:        'Password Expiry'
  rap_setting_password_max_age:       'Maximum password age'
  rap_setting_password_expiry_warn_a: 'Email warning notifications start'
  rap_setting_password_expiry_warn_b: 'before password expiration'
  rap_notice_password_expired:        'Your password has expired.'
 
  rap_mail_subject_warn_expiry:       'Warning - Password Expiration in %{days_left} Days'
  rap_mail_body_warn_expiry_header:   'Password Expiration Warning'
  rap_mail_body_warn_expiry:          'The password of your account "%{name}" [%{login}] will expire in %{days_left} days. Please log in and update your password before this occurs.' 

  rap_mail_subject_is_expired:       'Password Expired'
  rap_mail_body_is_expired_header:   'Password Expiration Notice'
  rap_mail_body_is_expired:          'The password of your account "%{name}" [%{login}] has expired.' 

    # == password reuse == #
  rap_setting_password_reuse:         'Password Reuse'
  rap_notice_password_reuse:          'Your new password must be different from your last %{min_unique} passwords'
  rap_setting_password_min_age:       'Prevent changing password before'
  rap_setting_password_min_unique_a:  'TODO: (Redmine already does it for last password). Ensure previous'
  rap_setting_password_min_unique_b:  'passwords are unique'

    # == invalid logins lockout == #
  rap_setting_invalid_logins:         'Invalid Login Attempts'
  rap_setting_invalid_logins_a:       'Lock account for'
  rap_setting_invalid_logins_b:       'minutes after'
  rap_setting_invalid_logins_c:       'unsuccessful login attempts'
  rap_setting_notify_on_failure:      'Notify user on every failed login'
  rap_setting_notify_on_lockout:      'Users and Administrators are always notified when an account is locked out.'
  rap_notice_invalid_logins_remaining: 'attempts remaining.'

  rap_notice_account_lockout:         'Your account has been locked due to too many login attempts. Please wait for '

  rap_mail_subject_login_failure:     'Failed Login Attempt'
  rap_mail_subject_login_lockout:     'Maximum Login Attempts Reached - Account temporarily locked'
  rap_mail_body_login_failure_header: 'Failed login attempt'
  rap_mail_body_login_lockout_header: 'Maximum allowed login attempts reached'
  rap_mail_body_login_failure:        'An unsuccessful attempt to login to your account was made from %{ip_address}.'
  rap_mail_body_login_lockout:        'Your account "%{name}" [%{login}] reached its maximum allowed number fo failed login attempts.  The last attempt was from %{ip_address}.  Your account has been locked for %{lockout_duration} minutes.'


    # == unused accounts == #
  rap_setting_unused_account:         'Unused/Dormant Accounts'
  rap_setting_unused_account_max_age: 'Deactivate accounts not used for'


    # == daily cron == #
  rap_setting_account_policy_checked_on: 'Account policies last checked on'

